


Fait :
-	création d'un process père et fork d'un fils
-	ajout de plusieurs fils
-	**transmission d'information entre fils et père via pipe (première idée, à remplacer par shared memory)
-	gestion d'un secteur de course par les fils
-	transmission de la position au père
-	représentation graphique de la position de chaque voiture et affichage par le père (le "contrôleur de course")
-	*explorer comment utiliser la mémoire partagée
-	*explorer comment marche les sémaphores pour protéger l'accès au code accédant aux ressources partagées
-	convertir le mécanisme de remontée d'information fils-père de pipe vers shmem (shared memory)
-	gérer les deux secteurs supplémentaires
-	gérer le nombre de tours à faire (simple)
-	gérer et afficher le nombre de tours faits
-	*explorer la gestion du temps précis (au niveau µs plutôt que seconde)
-	adapter la gestion du temps à la µs dans le programme
-	gérer et afficher au niveau du père/contrôleur de course le meilleur temps du secteur, pour chaque voiture individuellement
-   gérer et afficher au niveau du père/contrôleur de course le meilleur temps de chaque secteur et quelle voiture l'a fait
-   afficher le temps de course total de chaque voiture/pilote

A faire :
-	afficher la place actuelle des cars/pilotes
-	*explorer la lecture des fichiers
-	*lire et afficher le fichier des pilotes
-	*lire et afficher le fichier des circuits
-	*permettre à l'utilisateur de choisir un circuit
-	gérer le nombre de tours à faire (en fonction du circuit choisi)
-	*réfléchir à la structure de données nécessaire pour gérer le championnat sur toute l'année (pilotes x circuits)
-	créer la structure championnat en mémoire et l'écrire dans un fichier
-	afficher l'état actuel du championnat à l'écran
-	au début d'une course, lire le fichier championnat, et l'afficher
-	à la fin d'une course, attribuer les points en fonction de la place et afficher le championnat
-	écrire le championnat sur fichier
-	*permettre à l'utilisateur de choisir un type de course (Essai, Qualification, Sprint, Normal)
-	gérer une course de type Essai
-	gérer une course de type Qualification
-	inscrire sur fichier les résultats des Qualifications
-	gérer une course de type Sprint
-	gérer une course de type Normale (avec positions initiales et update fichier championnat à la fin)
-	etc
-	

*: peut être fait indépendamment de l'intégration dans le programme principal
